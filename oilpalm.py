# -*- coding: utf-8 -*-
"""oilpalm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rCDipIN5XJPcVY4coSQnFhTm93Lr0Itk
"""

import streamlit as st
from inference_sdk import InferenceHTTPClient
from PIL import Image
import io

# Inisialisasi client Roboflow
client = InferenceHTTPClient(
    api_url="https://detect.roboflow.com",  # Gunakan server inference Roboflow
    api_key="OPbzKBpjX4FDciwm3Bk3"  # Ganti dengan API key Anda
)

# Streamlit UI untuk mengupload gambar
st.title('Deteksi Objek dengan Roboflow')
uploaded_image = st.file_uploader("Pilih gambar untuk dianalisis", type=["jpg", "png", "jpeg"])

if uploaded_image is not None:
    # Menampilkan gambar yang diupload
    image = Image.open(uploaded_image)
    st.image(image, caption="Gambar yang diupload", use_column_width=True)

    # Mengonversi gambar menjadi byte stream untuk dikirim ke API
    img_bytes = uploaded_image.getvalue()

    # Menjalankan workflow untuk deteksi objek
    result = client.run_workflow(
        workspace_name="saraswanti",
        workflow_id="detect-count-and-visualize-3",
        images={
            "image": img_bytes
        }
    )

    # Menampilkan hasil deteksi
    if result.get('predictions'):
        st.subheader("Hasil Deteksi:")
        for prediction in result['predictions']:
            st.write(f"Label: {prediction['class']} - Confidence: {prediction['confidence']*100:.2f}%")
            st.image(prediction['image'], caption="Deteksi", use_column_width=True)
    else:
        st.write("Tidak ada objek yang terdeteksi.")